# Generated by Django 2.1.5 on 2019-04-16 17:06

import app.managers
import app.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(blank=True, default=None, max_length=255, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Username is invalid.', regex='^(?=.{5,15}$)[a-zA-Z0-9_.]*$')])),
                ('email', models.EmailField(blank=True, default=None, max_length=255, null=True)),
                ('full_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('middle_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female'), ('other', 'other')], default='male', max_length=255)),
                ('photo', sorl.thumbnail.fields.ImageField(default=app.models.get_default_profile_photo, upload_to=app.models.get_profile_photo_upload_path)),
                ('date_of_birth', models.DateField(blank=True, default=None, null=True)),
                ('place_of_birth', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('date_of_death', models.DateField(blank=True, default=None, null=True)),
                ('place_of_death', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('phone_number', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message='Mobile No. is invalid.', regex='^([16789]\\d{9}|AnonymousUser)$')])),
                ('address', models.TextField(blank=True, default=None, null=True)),
                ('city', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('email_confirmed', models.BooleanField(default=False)),
                ('is_dummy', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', app.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Continent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('continent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='countries', to='app.Continent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('full_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('short_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('type', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('short_description', models.TextField(blank=True, default=None, null=True)),
                ('website', models.URLField(blank=True, default=None, null=True)),
                ('logo', sorl.thumbnail.fields.ImageField(default=app.models.get_default_profile_photo, upload_to=app.models.get_profile_photo_upload_path)),
                ('headquarters', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('founded', models.DateField(blank=True, default=None, null=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organizations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provinces', to='app.Country')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TokenBlackList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('token', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('platform', models.CharField(default='razorpay', max_length=255)),
                ('payment_id', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('status', models.CharField(choices=[('CREATED', 'created'), ('AUTHORIZED', 'authorized'), ('CAPTURED', 'captured'), ('REFUNDED', 'refunded'), ('FAILED', 'failed')], default='CREATED', max_length=255)),
                ('method', models.CharField(choices=[('CARD', 'card'), ('NETBANKING', 'netbanking'), ('WALLET', 'wallet'), ('UPI', 'upi')], max_length=255)),
                ('fee', models.DecimalField(decimal_places=2, max_digits=15)),
                ('amount_refunded', models.DecimalField(decimal_places=2, max_digits=15)),
                ('refund_status', models.CharField(choices=[('NULL', 'null'), ('PARTIAL', 'partial'), ('FULL', 'full')], default='NULL', max_length=255, null=True)),
                ('error_code', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('error_description', models.TextField(blank=True, default=None, null=True)),
                ('notes', models.TextField(blank=True, default=None, null=True)),
                ('test', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='country',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='app.Country'),
        ),
        migrations.AddField(
            model_name='user',
            name='father',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fchildren', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='mother',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mchildren', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='province',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='app.Province'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
